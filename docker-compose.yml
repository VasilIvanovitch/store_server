version: "3.9"

services:
  nginx:
    restart: always
    build:
        context: ./nginx
    ports:
      - "80:80" # port exposed to outside world.
      - "443:443" # <--- add this line
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - /home/basil/store-server/persistentdata/certbot/conf:/etc/letsencrypt # <--here
      - /home/basil/store-server/persistentdata/certbot/www:/var/www/certbot
      - /home/basil/store-server/persistentdata/static:/app/store/static  # /var/www/static
      - /home/basil/store-server/persistentdata/media:/app/store/media  # /var/www/media
    depends_on:
      - django-backend

  django-backend:
    restart: always
    build:
      context: ./store
    command: sh -c "gunicorn --bind 0.0.0.0:8000 store.wsgi"
    hostname: django-backend
    image: djangobackend
    volumes:
      - /home/basil/store-server/store/static:/store/static # <--here /var/www/static
      - /home/basil/store-server/store/media:/store/media # <--here /var/www/media
      - /home/basil/store-server/store:/store
    expose:
      - 8000
#    depends_on:
#      - worker

  certbot:
    restart: always
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - /home/basil/store-server/persistentdata/certbot/conf:/etc/letsencrypt # <--here
      - /home/basil/store-server/persistentdata/certbot/www:/var/lib/letsencrypt
      # - /home/basil/store-server/persistentdata/certbot/www:/var/www/certbot

  redis:
    restart: always
    image: redis:7.0.11-alpine
    # ports:
    #  - "6379:6379"
    hostname: redis

  worker:
    restart: always
    build:
      context: ./store
    hostname: worker
    entrypoint: celery
    command: -A store worker --loglevel=info
    volumes:
      - ./store:/store
    links:
      - redis
    depends_on:
      - redis
    env_file:
      - store/.env


# postgresql-db:
#   restart: always
#   image: postgres
#   volumes:
#           - ./persistentdata/db:/var/lib/postgresql/data
#   env_file:
#     - ./postgresql-db/.pg-env # why - see the next step
